## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                         	[mcu] section
## Thermistor types                      [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## PID tune                              [extruder] and [heater_bed] sections
## Fine tune E steps                     [extruder] section






[include mainsail.cfg]
#[include fluidd.cfg] 

[printer]
kinematics: corexz
max_velocity: 400
max_accel: 5000
max_z_velocity: 200
max_z_accel: 2000
square_corner_velocity: 4.0

[mcu]
###Change to device found by "ls -l /dev/serial/by-id/" with just one this MCU connected to Pi
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_31004D0014504B5735313920-if00

[mcu ebb]
serial : /dev/serial/by-id/usb-Klipper_stm32g0b1xx_570030000D50415833323720-if00




#####################################################################
# input shaper
#####################################################################
[adxl345 hotend]                        # <-------------- EBB42 V1.2 ADXL345
cs_pin: ebb:PB12
spi_software_sclk_pin: ebb:PB10
spi_software_mosi_pin: ebb:PB11
spi_software_miso_pin: ebb:PB2
axes_map: -y, -x, z   # X+=Y-, Y+=X-, Z 동일 => 이렇게 매핑. :contentReference[oaicite:0]{index=0}


[mcu adxl]                       # <--------------- FLY C TYPE ADXL345
#serial: /dev/serial/by-id/xxx
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6647C74035E1B37-if00
# Edit the above line with the correct serial address. Use "ls /dev/serial/by-id/*" to find the MCU serial address.
#serial: /dev/ttyACM0

[adxl345 bed]                     # <--------------- FLY C TYPE ADXL345
cs_pin: adxl:gpio9
spi_software_sclk_pin: adxl:gpio10
spi_software_mosi_pin: adxl:gpio11
spi_software_miso_pin: adxl:gpio12
axes_map: x, -y, z


[resonance_tester]
accel_chip_x: adxl345 hotend
accel_chip_y: adxl345 bed
probe_points: 110,115.5,10

[static_digital_output usb_pullup_enable]
pins: !PC13

#####################################################################
# 	TEMP
#####################################################################


[temperature_sensor MCU_SKR]   # mainboard temp
sensor_type: temperature_mcu
min_temp: -10
max_temp: 120

[temperature_sensor rasPi_4]    #rasberrypi temp
sensor_type: temperature_host
min_temp: -10
max_temp: 120



#####################################################################
# 	X Stepper Settings
#####################################################################

######
# Motor -XM
# Endstop - X-STOP
###############
[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: ^ebb:PB8
position_endstop: 0
position_min: 0
position_max: 220
homing_speed: 100
homing_positive_dir: false
homing_retract_dist: 0 

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 1
interpolate: False
stealthchop_threshold: 0

#####################################################################
#   Y Stepper Settings
#####################################################################

######
# Motor -YM
# Endstop - Y-STOP
###############
[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 32
## Ucomment one of the following:
## Switch-based endstop for Y
endstop_pin: ^PC1 
## Sensorless endstop for Y
#endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0 # Uncomment this line too
position_endstop: 232
position_min: -50
position_max: 232
homing_speed: 100
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 1
interpolate: False
stealthchop_threshold: 0
## Uncomment if using sensorless Y homing.
#driver_SGTHRS: 120 # tune this once it's working.

#####################################################################
# 	Z Stepper Settings
#####################################################################

######
# Motor -ZAM
# Endstop - Z-STOP
###############
[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: probe:z_virtual_endstop
position_max: 210
homing_speed: 50
homing_retract_dist: 0
position_min: -3.5


[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 1
interpolate: False
stealthchop_threshold: 0

#####################################################################
#   Extruder Settings
#####################################################################

######
#Motor - EM
###############
[extruder]
step_pin: ebb:PD0
dir_pin: ebb:PD1
enable_pin: !ebb:PD2


##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 23.702
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: ebb:PB13
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: ebb:PA3
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
#Set appropriate once tuning your printer
pressure_advance:  0.0505


min_temp: 0 
max_temp: 305 


##	Default is 0.040, leave stock
# pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 100.0
max_extrude_cross_section: 5.0


[tmc2209 extruder]
uart_pin: ebb:PA15
# tx_pin: PC10 <- ebb세팅으로 지움
uart_address: 0
run_current: 0.7
hold_current: 0.4
interpolate: False

#uart_pin: PC11
#tx_pin: PC10
#uart_address: 3
#run_current: 0.65
#hold_current: 0.3
#interpolate: False




#####################################################################
# 	Bed Heater
#####################################################################

######
# BED Connector
###############
[heater_bed]
heater_pin: PC9
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 130
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################


[probe_eddy_ng btt_eddy]
sensor_type: btt_eddy
i2c_mcu: ebb # MCU name of the actual board connected to Eddy Coil
i2c_bus: i2c3_PB3_PB4 # I2C bus actually connected to Eddy Coil
# reg_drive_current: 16
x_offset: 0
y_offset: 25  # CAD 23.168
  # samples_per_second: 250
tap_max_samples: 15
tap_samples_stddev: 0.01






#####################################################################
# 	Fan Control
#####################################################################

######
# Electronics Fan
# FAN1 Connector
###############



[controller_fan my_controller_fan]
# controller cooling fan
pin: PC7 
max_power: 1.00
kick_start_time: 0.200
heater: heater_bed

######
####################################### Hot End Fan #######################################
# FAN2 Connector
###############
[heater_fan extruder_fan]
pin: ebb:PA1
heater: extruder
heater_temp: 45.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

######
####################################### Part Cooling Fan #######################################
# FAN0 Connector
###############
[fan]
pin: ebb:PA0 
cycle_time: .08
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
kick_start_time: .25

#####################################################################
#   Homing and Bed Mesh
#####################################################################
#[homing_override]
#axes: z
#set_position_z: 0
#gcode:
#    G90
#    G0 Z5 F500
#    G28 X Y
#    G0 X110 Y116.5 F9000
#    G28 Z
#    G0 Z5 F500

    
[safe_z_home]
home_xy_position: 110, 146.50   # 베드 중앙 좌표(프로브기준)
z_hop: 7
z_hop_speed: 5
speed: 80




[bed_mesh]
speed: 100 # 250
horizontal_move_z: 2 # SEE EDDY SECTION
mesh_min: 20.00,60
mesh_max: 200.00,232.00
probe_count: 8,8
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[bed_screws]
screw1: 25, 205 # Using rear left to take measurements as harder to reach
screw1_name: rear left screw
screw2: 195, 205
screw2_name: rear right screw
screw3: 195, 57
screw3_name: front right screw
screw4: 25, 57
screw4_name: front left screw

[screws_tilt_adjust]
screw1: 25, 205 # Using rear left to take measurements as harder to reach
screw1_name: rear left screw
screw2: 195, 205
screw2_name: rear right screw
screw3: 195, 57
screw3_name: front right screw
screw4: 25, 57
screw4_name: front left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4 # Use CW for Clowise and CCW for Counter Clockwise 



#####################################################################
# 	Displays
#####################################################################
## 	For the mini12864 Display, the [display] and [neopixel] must be uncommented
# mini12864 LCD Display
# connected to exp1/2
#[display]
##    mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: PB8
#a0_pin: PB15
#rst_pin: PB9
#encoder_pins: ^PA9,^PA10
#click_pin: ^!PB5
#contrast: 63
#spi_software_sclk_pin: PA5
#spi_software_mosi_pin: PA7
#spi_software_miso_pin: PA6
#menu_reverse_navigation: True

#[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
## Remember with these ones, you'll need to remove the connector header on the LCD for EXT1 + 2
## (it slides off) and reverse it for it to work on your SKR (1.3 and 1.4) board
#pin: PA15
#chain_count: 3
#initial_RED: 1
#initial_GREEN: 1
#initial_BLUE: 1
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0	# Backlit Screen colour
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0	# Top left Knob colour
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3				# Bottom right knob colour

#####################################################################
#  Lights
#####################################################################
[neopixel sb_leds]
pin: ebb:PD3           # ← 중요! PB9 아님
chain_count: 3         # LED 개수(예: 3-LED 보드면 3, 로고+노즐 보드면 보통 10)
color_order: GRB      # 색이 뒤바뀌면 GRB/GRBW 등으로 바꿔 테스트
initial_RED: 0.80
initial_GREEN: 0.80
initial_BLUE: 0.80
#initial_WHITE: 0.0    # RGBW 보드일 때만 사용




[gcode_macro lights_on]
gcode:
  SET_LED LED=sb_leds RED=1 GREEN=1 BLUE=1

[gcode_macro lights_off]
gcode:
  SET_LED LED=sb_leds RED=0 GREEN=0 BLUE=0


[gcode_macro light_print_preparing]
gcode:
  SET_LED LED=sb_leds RED=0 GREEN=0 BLUE=1

[gcode_macro light_print_starting]
gcode:
  SET_LED LED=sb_leds RED=1 GREEN=1 BLUE=1






#####################################################################
# 	Macros
#####################################################################

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg


[gcode_macro PURGE_LINE] 
gcode:
    G92 E0
    G1 X10 Y10 Z0.3 F3000.0
    G1 X70 Y10 Z0.3 F1000.0 E15
    G92 E0


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
#gcode:
    #M117 Homing...                 ; display message
    #G90
    #G28
    #M117 Loading Bed Mesh...         
    #BED_MESH_PROFILE LOAD=;
    
    #Purge Line Gcode
    #G92 E0;
    #G90
    #G0 X5 Y5 F6000
    #G0 Z0.4
      #G91
    #G1 X120 E30 F1200;
    #G1 Y1
    #G1 X-120 E30 F1200;
    #G92 E0;
    #G90
    
    #G1 Z15.0 F600 ;move the platform down 15mm
    #G1 X125 Y125 F3000
    #G92 E0 ;zero the extruded length again
    #G1 F9000
    #M117 Printing... 


    # description: Heat <150C, Eddy-NG tap, (optional) save, then start
gcode:
    {% set target_bed      = params.BED_TEMP|default(60)|int %}
    {% set target_extruder = params.EXTRUDER_TEMP|default(210)|int %}
    # {% set target_chamber  = params.CHAMBER_TEMP|default(0)|int %}
    # {% set initial_tool    = params.INITIAL_TOOL|default(0)|int %}
    {% set tap_temp        = params.TAP_TEMP|default(100)|int %}   # lower than 150'c
    {% set samples         = params.SAMPLES|default(7)|int %}
    {% set mesh_name       = params.MESH_NAME|default("sw_auto") %}
    {% set save            = params.SAVE|default(1)|int %}         # 1=SAVE_CONFIG


    light_print_preparing # led

    # nozzle tapping temp.
    M106
    M104 S{tap_temp}
    M190 S{target_bed}
    #{% if target_chamber > 0 %}
    # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={target_chamber}
    #{% endif %}
    

    # homing and tapping ready
    G90
    G28       
    
    M109 S{tap_temp}
    M107


    # bed mesh
    #BED_MESH_CLEAR
    #BED_MESH_CALIBRATE
    #{% if save %}
    #  BED_MESH_PROFILE SAVE={mesh_name}
    #{% endif %}

    BED_MESH_PROFILE LOAD=default
    
    G0 Z20 # Set Z to 20 due to homing error
    #G28

    # Setting the Z reference using Eddy-NG tapping
    # PROBE_EDDY_NG_TAP SAMPLES={samples}

    # READY PRINTING
    
    M190 S{target_bed}
    M109 S{target_extruder}

    light_print_starting # led

    PURGE_LINE



[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    # G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
    M117 Finished!

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.283
#*# pid_ki = 7.252
#*# pid_kd = 27.575
#*#
#*# [probe_eddy_ng btt_eddy]
#*# calibrated_drive_currents = 15, 16
#*# calibration_version = 5
#*# reg_drive_current = 15
#*# tap_drive_current = 16
#*# calibration_15 = gASVywMAAAAAAAB9lCiMAXaUSwWMBGZ0b2iUjBtudW1weS5wb2x5bm9taWFsLnBvbHlub21pYWyUjApQb2x5bm9taWFslJOUKYGUfZQojARjb2VmlIwWbnVtcHkuX2NvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlIwFbnVtcHmUjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwqFlGgMjAVkdHlwZZSTlIwCZjiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYolDUGMhHZM1APc/p2F9EBhZ+z/jd/7hdtPiP3MJ1KOfRuw/CMs9Eudm5D8ZmVUNch/4v0GK5HWup9q/cIDiK8mFAUDTDqiTbs/VP05N65SgFeu/lHSUYowGZG9tYWlulGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQuxboYPVelD5md2gOPuWUPpR0lGKMBndpbmRvd5RoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRijAdfc3ltYm9slIwBeJSMBnN5bWJvbJRoLHVijAlmdG9oX2hpZ2iUaAUpgZR9lChoCGgLaA5LAIWUaBCHlFKUKEsBSwqFlGgYiUNQn/YgF0s0GkCu7a2kIG8IQESmHkn9+fc/VrhEeBZL8T+lN9tIv3QAQHl0bB3lmfo/a75HtM7PA8AzoF/g2PoDwPHRW/JrOwJA9xTU1rDsAECUdJRiaB1oC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDELNivwyv4JQ+6xrj2XL7lD6UdJRiaCRoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRiaCtoLGgtaCx1YowEaHRvZpRoBSmBlH2UKGgIaAtoDksAhZRoEIeUUpQoSwFLCoWUaBiJQ1A4v+d+MsSUPnISSnKSyyo+RGymHJ4hIL4M8M2XscsZPpj3t4NnC7e9POsZqYa8KL58QPnlJO/YPe0Xdvjo+S4+bHEIa+Bj6b3l4FRcMe0YvpR0lGJoHWgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQgE4dgX/Owz80bKMMB/cTQJR0lGJoJGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQAAAAAAAA8L8AAAAAAADwP5R0lGJoK2gsaC1oLHVijAdoX3JhbmdllF2UKEc/w85/gR1OgEdALfxprf55F2WMB2ZfcmFuZ2WUXZQoR0FIZs/6BcAAR0FJIkQuy+AAZYwCZGOUSw91Lg==
#*# calibration_16 = gASVywMAAAAAAAB9lCiMAXaUSwWMBGZ0b2iUjBtudW1weS5wb2x5bm9taWFsLnBvbHlub21pYWyUjApQb2x5bm9taWFslJOUKYGUfZQojARjb2VmlIwWbnVtcHkuX2NvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlIwFbnVtcHmUjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwqFlGgMjAVkdHlwZZSTlIwCZjiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYolDUKVO4F75a/M/23Sr0FjS+z8FVfxZWZXnPxz6DMPU2La/mP9U00wo0T/T5Q2sxKf9P2Sws5O8sbw/V9GZkvWDAMCdVX+oaovEP7KMZZfMzfA/lHSUYowGZG9tYWlulGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQb9JBtylalD54pqJzDAOVPpR0lGKMBndpbmRvd5RoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRijAdfc3ltYm9slIwBeJSMBnN5bWJvbJRoLHVijAlmdG9oX2hpZ2iUaAUpgZR9lChoCGgLaA5LAIWUaBCHlFKUKEsBSwqFlGgYiUNQFBID6nLzF0CmO4/f+2f+P+w8cgjZx+U/i6iOF2DE6z9VFzP4AICnP1UiP6mRlP+/QBT6CVcf0D+SolNBd8IGQEx+77F+1bq/sS7hOWbC9L+UdJRiaB1oC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEBridrfP/pQ+xWRebQkVlT6UdJRiaCRoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRiaCtoLGgtaCx1YowEaHRvZpRoBSmBlH2UKGgIaAtoDksAhZRoEIeUUpQoSwFLCoWUaBiJQ1DuNjDXkN2UPlzD8WKFRDA+OLs68au/Jb75i2XZB6MNPk1LsNjE2wE+MIIs0c/h9D0DqGu4bo8WvtvSHDCrLtY9gzop7uo7BD6Gj5tMp5vfvZR0lGJoHWgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQ2cNgJ9Jldz+0v0Ytue4TQJR0lGJoJGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQAAAAAAAA8L8AAAAAAADwP5R0lGJoK2gsaC1oLHVijAdoX3JhbmdllF2UKEc/d2XSJ2DD2UdAImsH8uJWOmWMB2ZfcmFuZ2WUXZQoR0FISTH/Y6AAR0FJKDBHcpgAZYwCZGOUSxB1Lg==
#*# tap_adjust_z = -0.547
#*# z_offset = 2.222
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 90.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.487987, 0.353040, 0.340217, 0.301990, 0.320040, 0.375419, 0.412030, 0.508375
#*# 	0.512168, 0.396562, 0.416908, 0.377968, 0.339150, 0.397079, 0.437668, 0.498371
#*# 	0.474035, 0.370832, 0.406565, 0.342815, 0.296504, 0.378253, 0.449303, 0.502182
#*# 	0.496516, 0.439574, 0.472159, 0.424321, 0.343878, 0.376463, 0.443940, 0.496515
#*# 	0.482177, 0.414529, 0.422912, 0.371648, 0.338216, 0.343878, 0.421894, 0.523291
#*# 	0.467743, 0.438114, 0.433171, 0.377507, 0.351814, 0.360769, 0.456099, 0.540795
#*# 	0.408046, 0.386052, 0.376685, 0.293839, 0.254790, 0.360769, 0.492036, 0.558905
#*# 	0.355154, 0.395590, 0.460763, 0.388586, 0.303862, 0.431259, 0.539834, 0.554331
#*# x_count = 8
#*# y_count = 8
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 199.97
#*# min_y = 60.0
#*# max_y = 231.98999999999995
#*#
#*# [bed_mesh sw_auto]
#*# version = 1
#*# points =
#*# 	0.487987, 0.353040, 0.340217, 0.301990, 0.320040, 0.375419, 0.412030, 0.508375
#*# 	0.512168, 0.396562, 0.416908, 0.377968, 0.339150, 0.397079, 0.437668, 0.498371
#*# 	0.474035, 0.370832, 0.406565, 0.342815, 0.296504, 0.378253, 0.449303, 0.502182
#*# 	0.496516, 0.439574, 0.472159, 0.424321, 0.343878, 0.376463, 0.443940, 0.496515
#*# 	0.482177, 0.414529, 0.422912, 0.371648, 0.338216, 0.343878, 0.421894, 0.523291
#*# 	0.467743, 0.438114, 0.433171, 0.377507, 0.351814, 0.360769, 0.456099, 0.540795
#*# 	0.408046, 0.386052, 0.376685, 0.293839, 0.254790, 0.360769, 0.492036, 0.558905
#*# 	0.355154, 0.395590, 0.460763, 0.388586, 0.303862, 0.431259, 0.539834, 0.554331
#*# x_count = 8
#*# y_count = 8
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 199.97
#*# min_y = 60.0
#*# max_y = 231.98999999999995
